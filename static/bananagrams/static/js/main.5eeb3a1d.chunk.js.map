{"version":3,"sources":["components/Types.js","components/Tile.jsx","components/BoardTile.jsx","components/EmptySpace.jsx","components/Board.jsx","components/Staging.jsx","components/Game.jsx","index.js"],"names":["Types","style","width","height","Tile","props","classes","classnames","isHighlighted","className","letter","BoardTile","r","c","handleClick","onClick","useCallback","ref","useRef","useDrag","item","type","id","collect","monitor","isDragging","drag","useDrop","accept","drop","onDrop","isOver","useMemo","left","top","zIndex","classNames","React","memo","selected","direction","styles","Board","selectedCell","squares","size","isSelected","push","EmptySpace","selectedDirection","onSelectedSquareClick","handleUnselectedCellClick","onTileDrop","key","tileSquares","tiles","flatMap","row","map","display","gridTemplate","Staging","letters","i","StagingTile","initialBag","Array","fill","smallBag","select1","list","index","Math","floor","random","length","values","remaining","remove","insertLetter","board","clone","slice","removeLetter","boardIsEmpty","getNeighbors","inBounds","curry","initialTiles","from","always","flexStyle","oppositeDirection","nextSelectedSpace","nextSpace","adjacent","boardWindowStyle","border","overflow","backgroundColor","swapTile","pt1","pt2","tmp","Game","useState","bag","staging","setState","setSelected","spacebarPressed","setSpacebarPressed","won","setWon","useEffect","listener","e","contains","indexOf","append","preventDefault","spaceUpListener","window","addEventListener","removeEventListener","point","onUnselectedCellClick","handleSelectedSquareClick","drawTiles","n","x","selections","selectionList","selectX","prevState","draw15Tiles","draw1Tile","noActiveTiles","bagEmpty","connected","totalTiles","reduce","acc","acc2","tilesOnBoard","firstOccupiedSquare","seen","Set","stack","count","current","pop","has","add","filter","tilesConnected","onStart","draggableStyle","position","cursor","handleTileDrop","dest","state","DndProvider","backend","Backend","disabled","whyDidYouRender","trackAllPureComponents","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.5eeb3a1d.chunk.js","sourcesContent":["export const Types = {\n  TILE: 'tile'\n}","import React from 'react';\n\nimport classnames from 'classnames';\n\nimport './Tile.scss';\n\nconst style= {\n  width: '100%',\n  height: '100%',\n}\n\nexport default function Tile(props) {\n  const classes = classnames({\n    \"Tile\": true,\n    \"is-highlighted\": props.isHighlighted,\n  })\n\n  return (\n    <div className={classes} style={style}>\n      {props.letter}\n    </div>\n  )\n}\n","import React, { useRef, useMemo, useCallback } from 'react';\nimport { useDrag } from 'react-dnd';\nimport { useDrop } from 'react-dnd';\nimport { Types } from './Types';\nimport classNames from 'classnames'\n\nimport Tile from './Tile';\n\nimport './BoardTile.scss';\n\nexport default function BoardTile(props) {\n  const { r, c, handleClick } = props;\n\n  const onClick = useCallback(() => {\n    handleClick({r, c});\n  }, [r, c, handleClick])\n\n  const ref = useRef(null);\n\n  const [{isDragging}, drag] = useDrag({\n    item: { type: Types.TILE, id: {r, c, letter: props.letter} },\n\t\tcollect: monitor => ({\n\t\t\tisDragging: !!monitor.isDragging(),\n\t\t}),\n  });\n\n  const [{ isOver }, drop] = useDrop({\n    accept: Types.TILE,\n    drop: (item) => {\n      props.onDrop(item.id, {r, c});\n    },\n\t\tcollect: monitor => ({\n\t\t\tisOver: !!monitor.isOver(),\n\t\t}),\n  })\n\n  drag(drop(ref));\n  const style = useMemo(() => ({\n    left: c*50,\n    top: r*50,\n    zIndex: `${c+1}${r+1}`,\n  }), [r, c]);\n\n  const classes = classNames({\n    \"BoardTile\": true,\n    'is-hovered': isOver,\n    'is-dragging': isDragging,\n  });\n\n  return (\n    <div className={classes} style={style} ref={ref} onClick={onClick}>\n      <Tile letter={props.letter} isHighlighted={isOver} />\n    </div>\n  )\n}\n","import React, { useMemo, useCallback } from 'react';\n\nimport classNames from 'classnames'\nimport { useDrop } from 'react-dnd';\nimport { Types } from './Types';\n\nexport default React.memo((props) => {\n  const { r, c, handleClick } = props;\n\n  const onClick = useCallback(() => {\n    handleClick({r, c});\n  }, [r, c, handleClick]);\n\n\n  const [{ isOver }, drop] = useDrop({\n    accept: Types.TILE,\n    drop: item => {\n      props.onDrop(item.id, {r, c});\n    },\n\t\tcollect: monitor => ({\n\t\t\tisOver: !!monitor.isOver(),\n\t\t}),\n  });\n\n  const classes = classNames({\n    \"Board-square\": true,\n    'is-hovered': isOver,\n    'is-selected': props.selected,\n  })\n\n  const direction = props.direction;\n  const styles = useMemo(() => ({\n    zIndex: `${c+1}${r+2}`,\n  }), [r, c]);\n\n  return (\n    <div ref={drop} className={classes} onClick={onClick}>\n        {props.selected && (<div className=\"Board-squareOverlay\"\n        style={styles}>\n          {direction === 'right' ? '→' : '↓'}\n        </div>)}\n    </div>\n  )\n});\n","import React, { useMemo } from 'react';\n\nimport BoardTile from './BoardTile';\nimport EmptySpace from './EmptySpace';\n\nimport './Board.scss';\n\nconst TILE_SIZE = 50;\n\nfunction cantorPairing(a, b) {\n  return (0.5) * (a + b) * (a + b + 1) + b;\n}\n\nexport default function Board(props) {\n  const selectedCell = props.selectedCell;\n\n  const squares = [];\n  for (let r = 0; r < props.size; r++) {\n    for (let c = 0; c < props.size; c++) {\n      const isSelected = selectedCell\n        ? selectedCell.r === r && selectedCell.c === c\n        : false;\n\n\n      squares.push(\n        <EmptySpace\n          r={r}\n          c={c}\n          selected={isSelected}\n          direction={props.selectedDirection}\n          handleClick={isSelected ? props.onSelectedSquareClick : props.handleUnselectedCellClick}\n          onDrop={props.onTileDrop}\n          key={r * props.size + c}\n        />\n      );\n    }\n  }\n\n  const tileSquares = props.tiles.flatMap((row, r) => row.map((letter, c) => {\n    const isSelected = selectedCell\n      ? selectedCell.r === r && selectedCell.c === c\n      : false;\n\n    return (\n      letter\n      ? <BoardTile\n          letter={letter}\n          r={r}\n          c={c}\n          handleClick={isSelected ? props.onSelectedSquareClick : props.handleUnselectedCellClick}\n          key={r * props.size + c}\n          onDrop={props.onTileDrop}\n        />\n      : null\n    )\n  }));\n\n  const styles = useMemo(() => ({\n    display: 'grid',\n    gridTemplate: `repeat(${props.size}, ${TILE_SIZE}px) / repeat(${props.size}, ${TILE_SIZE}px)`,\n  }), [props.size]);\n\n  return (\n    <div className=\"Board\"\n      style={styles}\n    >\n      {squares}\n      {tileSquares}\n    </div>\n  )\n}","import React from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { Types } from './Types';\n\nimport Tile from './Tile';\n\nimport './Staging.scss';\n\nexport default function Staging(props) {\n  const [{ isOver }, drop] = useDrop({\n    accept: Types.TILE,\n    drop: (item) => {\n      props.onDrop(item.id, null);\n    },\n\t\tcollect: monitor => ({\n\t\t\tisOver: !!monitor.isOver(),\n\t\t}),\n  })\n\n  const tiles = props.letters.map((letter, i) => (\n    <StagingTile key={i} letter={letter} />\n  ))\n  return (\n    <div className=\"Staging\" ref={drop}>\n      {tiles}\n    </div>\n  )\n}\n\nfunction StagingTile(props) {\n  const [{isDragging}, drag] = useDrag({\n    item: { type: Types.TILE, id: {r: null, c: null, letter: props.letter } },\n\t\tcollect: monitor => ({\n\t\t\tisDragging: !!monitor.isDragging(),\n\t\t}),\n  })\n\n  return (\n    <div ref={drag} className=\"Staging-slot\">\n      <Tile\n        letter={props.letter}/>\n    </div>\n  )\n}","import React, { useState, useEffect, useMemo, useCallback } from 'react';\n\nimport { curry, remove, always, contains, append, indexOf } from 'ramda';\n\nimport Draggable from 'react-draggable';\nimport { DndProvider } from 'react-dnd';\nimport Backend from 'react-dnd-html5-backend';\n\nimport Board from './Board';\nimport Staging from './Staging';\n\nconst initialBag = [\n  ...Array(13).fill('a'),\n  ...Array(3).fill('b'),\n  ...Array(3).fill('c'),\n  ...Array(6).fill('d'),\n  ...Array(18).fill('e'),\n  ...Array(3).fill('f'),\n  ...Array(4).fill('g'),\n  ...Array(3).fill('h'),\n  ...Array(12).fill('i'),\n  ...Array(2).fill('j'),\n  ...Array(2).fill('k'),\n  ...Array(5).fill('l'),\n  ...Array(3).fill('m'),\n  ...Array(8).fill('n'),\n  ...Array(11).fill('o'),\n  ...Array(3).fill('p'),\n  ...Array(2).fill('q'),\n  ...Array(9).fill('r'),\n  ...Array(6).fill('s'),\n  ...Array(9).fill('t'),\n  ...Array(6).fill('u'),\n  ...Array(3).fill('v'),\n  ...Array(3).fill('w'),\n  ...Array(2).fill('x'),\n  ...Array(3).fill('y'),\n  ...Array(2).fill('z'),\n];\n\nconst smallBag = [\n  ...Array(4).fill('a'),\n  ...Array(2).fill('b'),\n  ...Array(2).fill('c'),\n  ...Array(2).fill('d'),\n  ...Array(4).fill('e'),\n  ...Array(2).fill('f'),\n  ...Array(2).fill('g'),\n];\n\nconst BOARD_SIZE = 30;\n\nfunction select1(list) {\n  const index = Math.floor(Math.random() * list.length);\n  const values = list.length ? [list[index]] : [];\n  return {values, remaining: remove(index, 1, list)}\n}\n\nfunction selectX(list, x) {\n  let selections = [];\n  let selectionList = list;\n\n  for (let i = 0; i < x; i++) {\n    const {values, remaining} = select1(selectionList);\n    selections = [...selections, ...values];\n    selectionList = remaining;\n  }\n\n  return {values: selections, remaining: selectionList};\n}\n\nfunction insertLetter(board, {r, c}, letter) {\n  const clone = board.map(row => row.slice());\n  clone[r][c] = letter;\n  return clone;\n}\n\nfunction removeLetter(board, {r, c}) {\n  const clone = board.map(row => row.slice());\n  clone[r][c] = '';\n  return clone;\n}\n\nfunction boardIsEmpty(board) {\n  for (let r = 0; r < board.length; r++) {\n    for (let c = 0; c < board[r].length; c++) {\n      if (board[r][c]) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction tilesOnBoard(board) {\n  return board.reduce((acc, row) => {\n    return acc + row.reduce((acc2, letter) => {\n      return acc2 + (letter === '' ? 0 : 1)\n    }, 0)\n  }, 0)\n}\n\n\nfunction getNeighbors({r, c}) {\n  return [\n    {r: r+1, c},\n    {r: r-1, c},\n    {r, c: c+1},\n    {r, c: c-1},\n  ]\n}\n\nconst inBounds = curry((board, {r, c}) => {\n  return 0 <= r && r < board.length && 0 <= c && c < board[r].length;\n});\n\nfunction firstOccupiedSquare(board) {\n  for (let r = 0; r < board.length; r++) {\n    for (let c = 0; c < board[r].length; c++) {\n      if (board[r][c]) return {r, c}\n    }\n  }\n}\n\nfunction tilesConnected(board) {\n  if (boardIsEmpty(board)) return true;\n  const totalTiles = tilesOnBoard(board);\n  const {r, c} = firstOccupiedSquare(board);\n  const seen = new Set();\n  let stack = [{r, c}];\n  let count = 0;\n\n  while (stack.length) {\n    const current = stack.pop();\n    if (seen.has(`${current.r},${current.c}`)) continue;\n    seen.add(`${current.r},${current.c}`);\n    count += 1;\n    const n = getNeighbors(current)\n      .filter(inBounds(board))\n      .filter(({r, c}) => !!board[r][c])\n    stack = [...stack, ...n];\n  }\n\n  return totalTiles === count;\n}\n\nconst initialTiles =\n  Array.from({length: BOARD_SIZE}).map(() =>\n    Array.from({length: BOARD_SIZE}).map(\n      always('')));\n// initialTiles[Math.floor(BOARD_SIZE/2)][Math.floor(BOARD_SIZE/2)] = 'z';\n\nconst flexStyle = {\n  display: 'flex',\n}\n\nfunction pointsEqual(a, b) {\n  return a.r === b.r && a.c === b.c;\n}\n\nfunction adjacent({r, c}, direction) {\n  return direction === 'right'\n      ? {r, c: c+1}\n    : direction === 'down'\n      ? {r: r+1, c}\n    : direction === 'left'\n      ? {r, c: c-1}\n    : direction === 'up'\n     ? {r: r-1, c}\n    : {r, c}\n}\n\nfunction oppositeDirection(direction) {\n  switch(direction) {\n    case 'left':\n      return 'right'\n    case 'right':\n      return 'left'\n    case 'down':\n      return 'up'\n    case 'up':\n      return 'down'\n    default:\n      return 'left'\n  }\n}\n\nfunction nextSelectedSpace(board, {r, c}, direction) {\n  const nextSpace = adjacent({r, c}, direction);\n  return (nextSpace.r < board.length && nextSpace.c < board[nextSpace.r].length)\n    ? nextSpace\n    : {r, c};\n}\n\nconst boardWindowStyle = {\n  height: 800,\n  width: 800,\n  border: '2px solid magenta',\n  overflow: 'hidden',\n  backgroundColor: 'wheat',\n};\n\nconst swapTile = curry((board, pt1, pt2) => {\n  const clone = board.map(row => row.slice());\n  const tmp = clone[pt1.r][pt1.c];\n  clone[pt1.r][pt1.c] = clone[pt2.r][pt2.c];\n  clone[pt2.r][pt2.c] = tmp;\n  return clone\n});\n\nconst onTileDrop = ({board, staging}, id, dest) => {\n  if (dest === null) {\n    return {\n      board:  id.r !== null ? removeLetter(board, id) : board,\n      staging: id.r !== null ? append(id.letter, staging) : staging,\n    }\n  } else {\n    return {\n      board:  id.r !== null ? swapTile(board, id, dest) : insertLetter(board, dest, id.letter),\n      staging: id.r !== null ? staging : remove(indexOf(id.letter, staging), 1, staging),\n    }\n  }\n};\n\nexport default function Game() {\n  const [{ board, bag, staging }, setState] = useState({board: initialTiles, bag: smallBag, staging: []})\n  const [{selectedCell, selectedDirection}, setSelected] = useState({selectedCell: null, selectedDirection: null});\n  const [spacebarPressed, setSpacebarPressed] = useState(false);\n  const [won, setWon] = useState(false);\n\n  useEffect(() => {\n    const listener =  (e) => {\n      if (contains(e.key, staging)) {\n        setState(({board, bag, staging}) => ({\n          board: insertLetter(board, selectedCell, e.key),\n          bag: bag,\n          staging: board[selectedCell.r][selectedCell.c] === '' ? remove(indexOf(e.key, staging), 1, staging) : append(board[selectedCell.r][selectedCell.c], remove(indexOf(e.key, staging), 1, staging)),\n        }));\n        setSelected({\n          selectedCell: nextSelectedSpace(board, selectedCell, selectedDirection),\n          selectedDirection: selectedDirection,\n        });\n      } else {\n        if (e.key === 'ArrowDown') {\n          setSelected(({selectedCell, selectedDirection}) => ({\n            selectedCell: selectedDirection === 'down' ? nextSelectedSpace(board, selectedCell, 'down') : selectedCell,\n            selectedDirection: 'down',\n          }))\n        } else if (e.key === 'ArrowLeft') {\n          setSelected(({selectedCell, selectedDirection}) => ({\n            selectedCell: nextSelectedSpace(board, selectedCell, 'left'),\n            selectedDirection: selectedDirection,\n          }))\n        } else if (e.key === 'ArrowRight') {\n          setSelected(({selectedCell, selectedDirection}) => ({\n            selectedCell: selectedDirection === 'right' ? nextSelectedSpace(board, selectedCell, 'right') : selectedCell,\n            selectedDirection: 'right',\n          }))\n        } else if (e.key === 'ArrowUp') {\n          setSelected(({selectedCell, selectedDirection}) => ({\n            selectedCell: nextSelectedSpace(board, selectedCell, 'up'),\n            selectedDirection: selectedDirection,\n          }))\n        } else if (e.key === 'Backspace') {\n          e.preventDefault();\n          setState(({bag, board, staging}) => ({\n            board: insertLetter(board, selectedCell, ''),\n            staging: board[selectedCell.r][selectedCell.c] !== '' ? append(board[selectedCell.r][selectedCell.c], staging) : staging,\n            bag: bag,\n          }))\n          setSelected(({selectedCell, selectedDirection}) => ({\n            selectedCell: nextSelectedSpace(board, selectedCell, oppositeDirection(selectedDirection)),\n            selectedDirection: selectedDirection,\n          }))\n        } else if (e.key === ' ') {\n          setSpacebarPressed(true);\n        }\n      }\n    }\n\n    window.addEventListener('keydown', listener);\n\n    function spaceUpListener(e) {\n      if (e.key === ' ') {\n        setSpacebarPressed(false);\n      }\n    }\n    window.addEventListener('keyup', spaceUpListener)\n\n    return () => {\n      window.removeEventListener('keydown', listener);\n      window.removeEventListener('keyup', spaceUpListener);\n    }\n  }, [selectedCell, bag, board, staging, selectedDirection, spacebarPressed]);\n\n  const onSelectedSquareClick = useMemo(() => (spacebarPressed, point) => {\n    if (spacebarPressed) return;\n    setSelected({\n      selectedCell: selectedDirection === 'right' ? point : null,\n      selectedDirection: selectedDirection === 'right' ? 'down' : null,\n    })\n  }, [selectedDirection]);\n\n  const onUnselectedCellClick = useMemo(() => (spacebarPressed, point) => {\n    if (spacebarPressed) return;\n    setSelected({\n      selectedCell: (point),\n      selectedDirection: 'right',\n    })\n  }, [setSelected]);\n\n\n  const handleSelectedSquareClick = useMemo(() => (e) => onSelectedSquareClick(spacebarPressed, e), [spacebarPressed, onSelectedSquareClick]);\n  const handleUnselectedCellClick = useMemo(() => (e) => onUnselectedCellClick(spacebarPressed, e), [spacebarPressed, onUnselectedCellClick]);\n\n  function restart() {\n    setState({\n      board: initialTiles,\n      bag: initialBag,\n      staging: [],\n    })\n\n    setWon(false);\n  }\n\n  function win() {\n    setWon(true);\n  }\n\n  const drawTiles = useMemo(() => (n) => {\n    const { values, remaining } = selectX(bag, n);\n\n    setState((prevState) => ({\n      ...prevState,\n      bag: remaining,\n      staging: [...prevState.staging, ...values]\n    }));\n  }, [bag]);\n\n  const draw15Tiles = useMemo(() => () => drawTiles(15), [drawTiles]);\n  const draw1Tile = useMemo(() => () => drawTiles(1), [drawTiles]);\n\n  const noActiveTiles = boardIsEmpty(board) && staging.length === 0;\n  const bagEmpty = bag.length === 0;\n  const connected = useMemo(() => tilesConnected(board), [board]);\n\n  const onStart = useCallback(() => spacebarPressed, [spacebarPressed]);\n  const draggableStyle = useMemo(() => ({\n    position: 'relative',\n    cursor: spacebarPressed ? 'grab' : 'default',\n    left: -BOARD_SIZE * 50 / 4,\n    top: -BOARD_SIZE * 50 / 4\n  }), [spacebarPressed]);\n\n  const handleTileDrop = useCallback((id, dest) => setState((state) => ({\n    ...state,\n    ...onTileDrop(state, id, dest),\n  })), [setState]);\n\n  return (\n    <div>\n      <div style={flexStyle}>\n      <DndProvider backend={Backend}>\n        <div className=\"Board-window\" style={boardWindowStyle}>\n          <Draggable onStart={onStart}>\n            <div style={draggableStyle}>\n              <Board\n                size={BOARD_SIZE}\n                selectedCell={selectedCell}\n                selectedDirection={selectedDirection}\n                onSelectedSquareClick={handleSelectedSquareClick}\n                handleUnselectedCellClick={handleUnselectedCellClick}\n                onTileDrop={handleTileDrop}\n                tiles={board} />\n            </div>\n          </Draggable>\n        </div>\n        <Staging letters={staging}\n                 onDrop={handleTileDrop} />\n      </DndProvider>\n      </div>\n      <div>\n        {won && \"YOU WON!\"}\n        {!won && noActiveTiles && <button onClick={draw15Tiles}>DRAW TILES</button>}\n        {!won && <button disabled={!connected || bagEmpty || staging.length!==0} onClick={draw1Tile}>PEEL</button>}\n        {!won && <button disabled={!bagEmpty || !connected || staging.length!==0} onClick={win}>BANANAS!</button>}\n        {<button onClick={restart}>Restart</button>}\n      </div>\n    </div>\n  )\n}","import React from 'react';\n\nimport whyDidYouRender from '@welldone-software/why-did-you-render'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './base.scss';\n\nimport Game from './components/Game'\n\nwhyDidYouRender(React, {\n  trackAllPureComponents: true,\n});\n\n\n\nconst root = document.getElementById('root');\n\n// ReactDOM.render(<Dragger></Dragger>, root);\n\n// observe(knightPosition =>\n//   ReactDOM.render(<Board knightPosition={knightPosition} />, root),\n// )\n\nReactDOM.render(<Game></Game>, root);\n\n"],"sourceRoot":""}